Sub clearFields()
    
    Dim usedrng As Range
    Dim usedRangeLastColNum
    Dim usedrangelastrow
    
    Application.ScreenUpdating = False

    For Each usedrng In ActiveSheet.UsedRange
        If usedrng.MergeCells = True Then
            If usedrng.value = "" Then
                usedrng.value = ""
            End If
        Else
            If usedrng.value = "" Then
                usedrng.ClearContents
            End If
        End If
    Next
    
    ActiveSheet.UsedRange
    usedRangeLastColNum = ActiveSheet.UsedRange.Columns.count
    usedrangelastrow = ActiveSheet.UsedRange.Rows.count
    
    For r = usedrangelastrow To 1 Step -1
        If Application.WorksheetFunction.CountA(Cells(r, usedRangeLastColNum).EntireRow) <> 0 Then
            Exit For
        Else
            Cells(r, usedRangeLastColNum).EntireRow.Delete
        End If
    Next r
    
    ActiveSheet.UsedRange
    Application.ScreenUpdating = True
    
End Sub

Sub CreateWord()
  
    ' Set up variables
    Dim ws As Worksheet
    Dim wsComments As Worksheet
    Dim wsCalc As Worksheet
 
    ' If you are using multiple sheets
    Set ws = Worksheets("Input")
    Set wsCalc = Worksheets("Calculations")

    Dim objword As Object
    Dim objDoc As Object
    Dim tally As Integer

    tally = 2

    Dim rw As Range
    
    Dim commentText As String
    Dim explanationText As String

    Dim header_first As Boolean

    Dim text As String

    header_first = True

    For Each rw In ws.UsedRange.Rows
        ' to skip the header row
        If header_first = True Then
            header_first = False

        Else

            Call nextCalculation(tally)
            
            On Error Resume Next
            Set objword = GetObject(, "Word.Application")

            If objword Is Nothing Then
                Set objword = CreateObject("Word.Application")
            End If

            On Error GoTo 0
  
            'Copy to word
            Set objDoc = objword.Documents.Add("C:\Users\c268249\Box Sync\FSP Project\Farm Data\Farm Report Template.dotx")
            'The link to the template word file
  
            With objDoc

                .Bookmarks("FarmNameRef").Range.text = ws.Range("d" & rw.Row).value
                .Bookmarks("Date").Range.text = ws.Range("c" & rw.Row).value
                .Bookmarks("Examiner").Range.text = ws.Range("e" & rw.Row).value
                
                If ws.Range("f" & rw.Row).value = 0 Then
                    .Bookmarks("ElancoRep").Range.text = "N/A"
                Else
                    .Bookmarks("ElancoRep").Range.text = ws.Range("f" & rw.Row).value
                End If
                
                .Bookmarks("mgmtSys").Range.text = ws.Range("g" & rw.Row).value
                .Bookmarks("noHouse").Range.text = ws.Range("i" & rw.Row).value
                .Bookmarks("noBirds").Range.text = ws.Range("j" & rw.Row).value
                .Bookmarks("noStaff").Range.text = ws.Range("k" & rw.Row).value
                .Bookmarks("shedAge").Range.text = ws.Range("l" & rw.Row).value
                .Bookmarks("birdAge").Range.text = ws.Range("m" & rw.Row).value
                .Bookmarks("exec1").Range.text = wsCalc.Range("H1").value
                .Bookmarks("exec2").Range.text = wsCalc.Range("K3").value
                .Bookmarks("exec3").Range.text = wsCalc.Range("K17").value
                .Bookmarks("exec4").Range.text = wsCalc.Range("K28").value
                .Bookmarks("exec5").Range.text = wsCalc.Range("K59").value
                .Bookmarks("exec6").Range.text = wsCalc.Range("K71").value
                .Bookmarks("exec7").Range.text = wsCalc.Range("K87").value
                .Bookmarks("exec8").Range.text = wsCalc.Range("K93").value
                .Bookmarks("res1").Range.text = wsCalc.Range("K3").value
                .Bookmarks("res2").Range.text = wsCalc.Range("K17").value
                .Bookmarks("res3").Range.text = wsCalc.Range("K28").value
                .Bookmarks("res4").Range.text = wsCalc.Range("K59").value
                .Bookmarks("res5").Range.text = wsCalc.Range("K71").value
                .Bookmarks("res6").Range.text = wsCalc.Range("K87").value
                .Bookmarks("res7").Range.text = wsCalc.Range("K93").value
                
                Call conditionalFormat(objword, 2, 5, 3, 1)
                Call conditionalFormat(objword, 8, 28, 4, 3)
                
                ' Question 1.1 comments and explanations
                Call commentsExplanations(objDoc, 3, 16, "Com1", "Exp1")
                
                ' Question 1.2 comments and explanations
                Call commentsExplanations(objDoc, 17, 27, "Com2", "Exp2")
                
                ' Question 1.3 comments and explanations
                Call commentsExplanations(objDoc, 28, 58, "Com3", "Exp3")
                
                ' Question 2.1 comments and explanations
                Call commentsExplanations(objDoc, 59, 70, "Com4", "Exp4")
                
                ' Question 2.2 comments and explanations
                Call commentsExplanations(objDoc, 71, 86, "Com5", "Exp5")
                
                ' Question 2.3 comments and explanations
                Call commentsExplanations(objDoc, 87, 92, "Com6", "Exp6")
                
                ' Question 3.1 comments and explanations
                Call commentsExplanations(objDoc, 93, 98, "Com7", "Exp7")
                
            End With

            Application.Wait (Now + TimeValue("0:00:5"))
            
            objword.Visible = False
            objword.DisplayAlerts = 0
            
            ' Remove special characters from the Farm name
            Static SpecialCharacters As String
            Dim newString As String
            Dim char As Variant
            
            SpecialCharacters = "!,@,#,$,%,^,&,*,(,),{,[,],},?,/"
            newString = ws.Range("d" & rw.Row).value
            
            For Each char In Split(SpecialCharacters, ",")
                newString = Replace(newString, char, " ")
            Next
            
            objDoc.SaveAs ("C:\Users\c268249\Box Sync\FSP Project\Farm Data\Reports\" & newString & ".docx")
     
            Set objDoc = Nothing
            objword.Quit
            Set objword = Nothing

            tally = tally + 1
    
        End If
       
        Application.Wait (Now + TimeValue("0:00:5"))
     
    Next rw
  
    copyData
    
    MsgBox "All reports have been created and stored in the Reports folder." & vbNewLine & "All data has been copied to the other workbook for analysis." & vbNewLine & "Please feel free to review all documents."
    
End Sub

Function nextCalculation(currentRow As Integer)
   
    Dim SourceRange As Range
    Dim dynamRange As String
    
    dynamRange = "N" & currentRow & ":DE" & currentRow
 
    Set SourceRange = Range(dynamRange)
    
    Sheets("Input").Activate
    SourceRange.Copy
    Sheets("Calculations").Activate
    Range("F3:F98").Select
    Selection.PasteSpecial Paste:=xlPasteAll, Operation:=xlNone, SkipBlanks:=False, Transpose:=True
 
    Application.CutCopyMode = False
                    
    Sheets("Input").Activate
        
End Function

Function commentsExplanations(objDoc As Object, startPoint As Integer, endPoint As Integer, comBookmark As String, expBookmark As String)
    
    Dim wsCalc As Worksheet
    Set wsCalc = Worksheets("Calculations")
        
    For intI = startPoint To endPoint
    
        If wsCalc.Range("F" & intI).value = 0 Then
            If wsCalc.Range("M" & intI).value <> "" Then
                commentText = commentText & wsCalc.Range("M" & intI).value & vbNewLine
            End If
            If wsCalc.Range("O" & intI).value <> "" Then
                explanationText = explanationText & wsCalc.Range("O" & intI).value & vbNewLine
            End If
        ElseIf wsCalc.Range("F" & intI).value = 3 Then
            If wsCalc.Range("N" & intI).value <> "" Then
                commentText = commentText & wsCalc.Range("N" & intI).value & vbNewLine
            End If
            If wsCalc.Range("P" & intI).value <> "" Then
                explanationText = explanationText & wsCalc.Range("P" & intI).value & vbNewLine
            End If
        End If
    Next intI
    
    If wsCalc.Range("K" & startPoint).value = 100 Then
        If wsCalc.Range("Q" & endPoint).value <> "" Then
            commentText = commentText & wsCalc.Range("Q" & endPoint).value & vbNewLine
        End If
    End If
    
    objDoc.Bookmarks(comBookmark).Range.text = commentText
    objDoc.Bookmarks(expBookmark).Range.text = explanationText

End Function

Function conditionalFormat(objword As Object, startPoint As Integer, endPoint As Integer, column As Integer, step As Integer)

    ' Word Objects
    Dim oCell As Word.Cell
    Dim oColumn As Word.column
    Dim value As Integer

    'Analysing the tables
    For intI = startPoint To endPoint Step step
        Set oColumn = objword.ActiveDocument.Tables(intI).Range.Columns(column)

        For Each oCell In oColumn.Cells

            value = Val(oCell.Range.text)
            
            If IsNumeric(Left(oCell.Range.text, Len(oCell.Range.text) - 2)) Then

                Select Case value

                    Case Is >= 90
                    oCell.Shading.ForegroundPatternColor = RGB(12, 212, 72)
                    Case Is >= 85
                    oCell.Shading.ForegroundPatternColor = RGB(53, 219, 60)
                    Case Is >= 80
                    oCell.Shading.ForegroundPatternColor = RGB(93, 226, 48)
                    Case Is >= 75
                    oCell.Shading.ForegroundPatternColor = RGB(133, 234, 36)
                    Case Is >= 70
                    oCell.Shading.ForegroundPatternColor = RGB(174, 241, 24)
                    Case Is >= 65
                    oCell.Shading.ForegroundPatternColor = RGB(215, 248, 12)
                    Case Is >= 60
                    oCell.Shading.ForegroundPatternColor = RGB(235, 251, 6)
                    Case Is >= 55
                    oCell.Shading.ForegroundPatternColor = RGB(255, 234, 0)
                    Case Is >= 50
                    oCell.Shading.ForegroundPatternColor = RGB(255, 212, 0)
                    Case Is >= 45
                    oCell.Shading.ForegroundPatternColor = RGB(255, 191, 0)
                    Case Is >= 40
                    oCell.Shading.ForegroundPatternColor = RGB(255, 170, 0)
                    Case Is >= 35
                    oCell.Shading.ForegroundPatternColor = RGB(255, 149, 0)
                    Case Is >= 30
                    oCell.Shading.ForegroundPatternColor = RGB(255, 128, 0)
                    Case Is >= 25
                    oCell.Shading.ForegroundPatternColor = RGB(255, 106, 0)
                    Case Is >= 20
                    oCell.Shading.ForegroundPatternColor = RGB(255, 85, 0)
                    Case Is >= 15
                    oCell.Shading.ForegroundPatternColor = RGB(255, 64, 0)
                    Case Is >= 10
                    oCell.Shading.ForegroundPatternColor = RGB(255, 43, 0)
                    Case Is < 10
                    oCell.Shading.ForegroundPatternColor = RGB(255, 0, 0)
                    
                End Select
                
                oCell.Range.Font.TextColor = wdColorWhite
                oCell.Range.Font.Line.Visible = msoCTrue
                oCell.Range.Font.Line.ForeColor.RGB = RGB(0, 0, 0)
                oCell.Range.Font.Bold = True
                oCell.Range.InsertAfter text:="%"
            End If

        Next
    Next intI

End Function

Sub copyData()
    Dim wsCopy As Worksheet
    Dim wsDest As Worksheet
    Dim lCopyLastRow As Long
    Dim lDestLastRow As Long
                    
    openWorkbook
                    
    'Set variables for copy and destination sheets
    Set wsCopy = Workbooks("Data Input - MASTER - Macro Enabled.xlsm").Worksheets("Input")
    Set wsDest = Workbooks("Farm Analysis Data.xlsx").Worksheets("Output")
                    
    '1. Find last used row in the copy range based on data in column A
    lCopyLastRow = wsCopy.Cells(wsCopy.Rows.count, "A").End(xlUp).Row
                    
    '2. Find first blank row in the destination range based on data in column A
    'Offset property moves down 1 row
    lDestLastRow = wsDest.Cells(wsDest.Rows.count, "A").End(xlUp).Offset(1).Row
        
    '3. Copy & Paste Data
    wsDest.Range("A" & lDestLastRow).value = Date
    wsDest.Range("A" & lDestLastRow).NumberFormat = "dd/mm/yy"
    
    wsCopy.Range("B2:D" & lCopyLastRow).Copy _
        wsDest.Range("B" & lDestLastRow)
    
    wsCopy.Range("N2:BQ" & lCopyLastRow).Copy _
        wsDest.Range("Q" & lDestLastRow)
        
    wsCopy.Range("BR2:CY" & lCopyLastRow).Copy _
        wsDest.Range("BV" & lDestLastRow)
                    
    wsCopy.Range("CZ2:DE" & lCopyLastRow).Copy _
        wsDest.Range("DE" & lDestLastRow)
        
    'Optional - Select the destination sheet
    wsDest.Activate
                    
    closeWorkbook
                    
End Sub

Sub openWorkbook()
                    
    Workbooks.Open "C:\Users\c268249\Box Sync\FSP Project\Farm Data\Data for Analysis\Farm Analysis Data.xlsx"
                    
End Sub

Sub closeWorkbook()
                    
    Application.DisplayAlerts = False
    Application.EnableEvents = False
    Workbooks("Farm Analysis Data.xlsx").Close SaveChanges:=True
                    
End Sub

