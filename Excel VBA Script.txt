Sub clearFields()
    
    Dim usedrng As Range
    Dim usedRangeLastColNum
    Dim usedrangelastrow
    
    Application.ScreenUpdating = False

    For Each usedrng In ActiveSheet.UsedRange
        If usedrng.MergeCells = True Then
            If usedrng.Value = "" Then
                usedrng.Value = ""
            End If
        Else
            If usedrng.Value = "" Then
                usedrng.ClearContents
            End If
        End If
    Next
    
    ActiveSheet.UsedRange
    usedRangeLastColNum = ActiveSheet.UsedRange.Columns.count
    usedrangelastrow = ActiveSheet.UsedRange.Rows.count
    
    For r = usedrangelastrow To 1 Step -1
        If Application.WorksheetFunction.CountA(Cells(r, usedRangeLastColNum).EntireRow) <> 0 Then
            Exit For
        Else
            Cells(r, usedRangeLastColNum).EntireRow.Delete
        End If
    Next r
    

    
    ActiveSheet.UsedRange
    Application.ScreenUpdating = True
    
End Sub

Sub CreateWord()
  
    ' Set up variables
    Dim ws As Worksheet
    Dim wsComments As Worksheet
 
    ' If you are using multiple sheets
    Set ws = Worksheets("Sheet1")
    Set wsComments = Worksheets("Sheet2")

    Dim objword As Object
    Dim objDoc As Object
    Dim tally As Integer

    tally = 2

    Dim oTable As Word.Table

    Dim rw As Range


    Dim header_first As Boolean

    Dim text As String

    header_first = True

    For Each rw In ws.UsedRange.Rows
        ' to skip the header row
        If header_first = True Then
            header_first = False

        Else

            Call nextCalculation(tally)
            
            On Error Resume Next
            Set objword = GetObject(, "Word.Application")

            If objword Is Nothing Then
                Set objword = CreateObject("Word.Application")
            End If

            On Error GoTo 0
  
            'Copy to word
            Set objDoc = objword.Documents.Add("C:\Users\c268249\Box Sync\FSP Project\Test Report.dotx")
            'The link to the template word file
  
            With objDoc

                .Bookmarks("FarmNameRef").Range.text = ws.Range("d" & rw.Row).Value
                .Bookmarks("Date").Range.text = ws.Range("c" & rw.Row).Value
                .Bookmarks("Examiner").Range.text = ws.Range("e" & rw.Row).Value
                .Bookmarks("ElancoRep").Range.text = ws.Range("f" & rw.Row).Value
                .Bookmarks("mgmtSys").Range.text = ws.Range("g" & rw.Row).Value
                .Bookmarks("noHouse").Range.text = ws.Range("i" & rw.Row).Value
                .Bookmarks("noBirds").Range.text = ws.Range("j" & rw.Row).Value
                .Bookmarks("noStaff").Range.text = ws.Range("k" & rw.Row).Value
                .Bookmarks("shedAge").Range.text = ws.Range("l" & rw.Row).Value
                .Bookmarks("birdAge").Range.text = ws.Range("m" & rw.Row).Value
        
                'Reference the table.
                Set oTable = .Bookmarks("Com1").Range.Tables(1)
    
                With oTable
    
                    ' Loop for multiple comments - rows
                    For Each rwComments In wsComments.UsedRange.Rows
                    
                        text = text & wsComments.Range("a" & rwComments.Row).Value & vbNewLine & wsComments.Range("b" & rwComments.Row).Value

                    Next rwComments
            
                    .Cell(1, 1).Range.InsertAfter text
                    
                    Call conditionalFormat(objword)
                    
                End With
            End With

            Application.Wait (Now + TimeValue("0:00:5"))
            
            objword.Visible = False
            objword.DisplayAlerts = 0
            
            objDoc.SaveAs ("C:\Users\c268249\Box Sync\FSP Project\Farm " & tally - 1 & ".docx")
     
            Set objDoc = Nothing
            objword.Quit
            Set objword = Nothing

            tally = tally + 1
    
        End If
       
       Application.Wait (Now + TimeValue("0:00:5"))
     
    Next rw
  
    copyData
  
End Sub

Function nextCalculation(currentRow As Integer)
   
    Dim SourceRange As Range
    Dim dynamRange As String
    
    dynamRange = "N" & currentRow & ":DE" & currentRow
 
    Set SourceRange = Range(dynamRange)
    
        Sheets("Sheet1").Activate
        SourceRange.Copy
        Sheets("Calculations").Activate
        Range("F3:F98").Select
        Selection.PasteSpecial Paste:=xlPasteAll, Operation:=xlNone, SkipBlanks:=False, Transpose:=True
 
        Application.CutCopyMode = False
                    
        Sheets("Sheet1").Activate
        
End Function
Function conditionalFormat(objword As Object)

    ' Word Objects
    Dim oCell As Word.Cell
    Dim oColumn As Word.Column

    'First set of tables
    For intI = 2 To 5
        Set oColumn = objword.ActiveDocument.Tables(intI).Range.Columns(3)

        For Each oCell In oColumn.Cells

            If IsNumeric(Left(oCell.Range.text, Len(oCell.Range.text) - 2)) Then

                If Val(oCell.Range.text) < 55 Then
                    oCell.Shading.ForegroundPatternColor = wdColorRed
                    oCell.Range.Font.TextColor = wdColorWhite
                    oCell.Range.Font.Bold = True
                    oCell.Range.InsertAfter text:="%"
                ElseIf Val(oCell.Range.text) > 55 And Val(oCell.Range.text) < 75 Then
                    oCell.Shading.ForegroundPatternColor = wdColorLightOrange
                    oCell.Range.Font.TextColor = wdColorWhite
                    oCell.Range.Font.Bold = True
                    oCell.Range.InsertAfter text:="%"
                ElseIf Val(oCell.Range.text) > 75 Then
                    oCell.Shading.ForegroundPatternColor = wdColorSeaGreen
                    oCell.Range.Font.TextColor = wdColorWhite
                    oCell.Range.Font.Bold = True
                    oCell.Range.InsertAfter text:="%"
                End If
            End If

        Next
    Next intI

    'Analysis set of tables
    For intI = 8 To 28 Step 3
        Set oColumn = objword.ActiveDocument.Tables(intI).Range.Columns(4)

        For Each oCell In oColumn.Cells

            If IsNumeric(Left(oCell.Range.text, Len(oCell.Range.text) - 2)) Then

                If Val(oCell.Range.text) < 33.3 Then
                    oCell.Shading.ForegroundPatternColor = wdColorRed
                    oCell.Range.Font.TextColor = wdColorWhite
                    oCell.Range.Font.Bold = True
                    oCell.Range.InsertAfter text:="%"
                ElseIf Val(oCell.Range.text) > 33.3 And Val(oCell.Range.text) < 66.6 Then
                    oCell.Shading.ForegroundPatternColor = wdColorLightOrange
                    oCell.Range.Font.TextColor = wdColorWhite
                    oCell.Range.Font.Bold = True
                    oCell.Range.InsertAfter text:="%"
                ElseIf Val(oCell.Range.text) > 66.6 Then
                    oCell.Shading.ForegroundPatternColor = wdColorSeaGreen
                    oCell.Range.Font.TextColor = wdColorWhite
                    oCell.Range.Font.Bold = True
                    oCell.Range.InsertAfter text:="%"
                End If
            End If

        Next
    Next intI

End Function

Sub copyData()
    Dim wsCopy As Worksheet
    Dim wsDest As Worksheet
    Dim lCopyLastRow As Long
    Dim lDestLastRow As Long
                    
    openWorkbook
                    
    'Set variables for copy and destination sheets
    Set wsCopy = Workbooks("Test Data Source.xlsm").Worksheets("Sheet1")
    Set wsDest = Workbooks("Test Output Data.xlsx").Worksheets("Sheet1")
                    
    '1. Find last used row in the copy range based on data in column A
    lCopyLastRow = wsCopy.Cells(wsCopy.Rows.count, "A").End(xlUp).Row
                    
    '2. Find first blank row in the destination range based on data in column A
    'Offset property moves down 1 row
    lDestLastRow = wsDest.Cells(wsDest.Rows.count, "A").End(xlUp).Offset(1).Row
                    
    '3. Copy & Paste Data
    wsCopy.Range("A2:D" & lCopyLastRow).Copy _
        wsDest.Range("A" & lDestLastRow)
                    
    'Optional - Select the destination sheet
    wsDest.Activate
                    
    closeWorkbook
                    
End Sub

Sub openWorkbook()
                    
    Workbooks.Open "C:\Users\c268249\Box Sync\FSP Project\Test Output Data.xlsx"
                    
End Sub

Sub closeWorkbook()
                    
    Application.DisplayAlerts = False
    Application.EnableEvents = False
    Workbooks("Test Output Data.xlsx").Close SaveChanges:=True
                    
End Sub
